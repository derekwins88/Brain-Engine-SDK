from __future__ import annotations

from pathlib import Path
from typing import Any

TPL = """<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>Brain-Engine Report</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
 body { font-family: system-ui, sans-serif; margin: 2rem; }
 code, pre { background: #f6f8fa; padding: .25rem .5rem; border-radius: 4px; }
 img { max-width: 100%; height: auto; }
 h1,h2 { margin-top: 1.5rem; }
 .kv { display:grid; grid-template-columns: 180px 1fr; gap:.5rem .75rem; }
 .kv div:nth-child(odd){ color:#555; }
</style>
</head>
<body>
<h1>Brain-Engine Report</h1>

<h2>Capsule</h2>
<div class="kv">
  <div>ID</div><div>{cid}</div>
  <div>Claim</div><div>{claim}</div>
  <div>Motifs</div><div>{motifs}</div>
  <div>PDE Strength</div><div>{pde}</div>
  <div>SAT (stub)</div><div>{sat_stub}</div>
  <div>Minisat avail</div><div>{minisat_avail}</div>
  <div>Minisat SAT</div><div>{minisat_sat}</div>
</div>

<h2>Resonance Wave</h2>
<p><img src="resonance_wave.png" alt="Resonance Wave"></p>

<h2>Artifacts</h2>
<ul>
  <li><a href="resonance_states.csv">resonance_states.csv</a></li>
  <li><a href="proof.cnf">proof.cnf</a></li>
  <li><a href="proof_lean_sketch.lean">proof_lean_sketch.lean</a></li>
  <li><a href="proof_draft.tex">proof_draft.tex</a></li>
  <li><a href="qubo.json">qubo.json</a></li>
</ul>

<footer style="margin-top:2rem;color:#777">Generated by Brain-Engine SDK</footer>
</body>
</html>
"""


def build_report(
    out_dir: str | Path, capsule: dict[str, Any], minisat_avail: bool, minisat_sat: str
) -> Path:
    out = Path(out_dir)
    out.mkdir(parents=True, exist_ok=True)
    html = TPL.format(
        cid=capsule.get("capsule_id", "CAP-UNKNOWN"),
        claim=capsule.get("claim", "OPEN"),
        motifs=", ".join(capsule.get("motifs", [])),
        pde=capsule.get("metadata", {}).get("pde_strength", "n/a"),
        sat_stub=str(capsule.get("metadata", {}).get("sat_stub", "n/a")),
        minisat_avail=str(minisat_avail),
        minisat_sat=minisat_sat,
    )
    path = out / "report.html"
    path.write_text(html, encoding="utf-8")
    return path
